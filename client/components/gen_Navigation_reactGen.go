// Code generated by reactGen. DO NOT EDIT.

package components

import "myitcv.io/react"

type NavigationElem struct {
	react.Element
}

func buildNavigation(cd react.ComponentDef) react.Component {
	return NavigationDef{ComponentDef: cd}
}

func buildNavigationElem(props NavigationProps, children ...react.Element) *NavigationElem {
	return &NavigationElem{
		Element: react.CreateElement(buildNavigation, props, children...),
	}
}

func (n NavigationDef) RendersElement() react.Element {
	return n.Render()
}

// SetState is an auto-generated proxy proxy to update the state for the
// Navigation component.  SetState does not immediately mutate n.State()
// but creates a pending state transition.
func (n NavigationDef) SetState(state NavigationState) {
	n.ComponentDef.SetState(state)
}

// State is an auto-generated proxy to return the current state in use for the
// render of the Navigation component
func (n NavigationDef) State() NavigationState {
	return n.ComponentDef.State().(NavigationState)
}

// IsState is an auto-generated definition so that NavigationState implements
// the myitcv.io/react.State interface.
func (n NavigationState) IsState() {}

var _ react.State = NavigationState{}

// GetInitialStateIntf is an auto-generated proxy to GetInitialState
func (n NavigationDef) GetInitialStateIntf() react.State {
	return NavigationState{}
}

func (n NavigationState) EqualsIntf(val react.State) bool {
	return n == val.(NavigationState)
}

// IsProps is an auto-generated definition so that NavigationProps implements
// the myitcv.io/react.Props interface.
func (n NavigationProps) IsProps() {}

// Props is an auto-generated proxy to the current props of Navigation
func (n NavigationDef) Props() NavigationProps {
	uprops := n.ComponentDef.Props()
	return uprops.(NavigationProps)
}

func (n NavigationProps) EqualsIntf(val react.Props) bool {
	return n == val.(NavigationProps)
}

var _ react.Props = NavigationProps{}
