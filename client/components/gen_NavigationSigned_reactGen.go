// Code generated by reactGen. DO NOT EDIT.

package components

import "myitcv.io/react"

type NavigationSignedElem struct {
	react.Element
}

func buildNavigationSigned(cd react.ComponentDef) react.Component {
	return NavigationSignedDef{ComponentDef: cd}
}

func buildNavigationSignedElem(props NavigationSignedProps, children ...react.Element) *NavigationSignedElem {
	return &NavigationSignedElem{
		Element: react.CreateElement(buildNavigationSigned, props, children...),
	}
}

func (n NavigationSignedDef) RendersElement() react.Element {
	return n.Render()
}

// SetState is an auto-generated proxy proxy to update the state for the
// NavigationSigned component.  SetState does not immediately mutate n.State()
// but creates a pending state transition.
func (n NavigationSignedDef) SetState(state NavigationSignedState) {
	n.ComponentDef.SetState(state)
}

// State is an auto-generated proxy to return the current state in use for the
// render of the NavigationSigned component
func (n NavigationSignedDef) State() NavigationSignedState {
	return n.ComponentDef.State().(NavigationSignedState)
}

// IsState is an auto-generated definition so that NavigationSignedState implements
// the myitcv.io/react.State interface.
func (n NavigationSignedState) IsState() {}

var _ react.State = NavigationSignedState{}

// GetInitialStateIntf is an auto-generated proxy to GetInitialState
func (n NavigationSignedDef) GetInitialStateIntf() react.State {
	return NavigationSignedState{}
}

func (n NavigationSignedState) EqualsIntf(val react.State) bool {
	return n == val.(NavigationSignedState)
}

// IsProps is an auto-generated definition so that NavigationSignedProps implements
// the myitcv.io/react.Props interface.
func (n NavigationSignedProps) IsProps() {}

// Props is an auto-generated proxy to the current props of NavigationSigned
func (n NavigationSignedDef) Props() NavigationSignedProps {
	uprops := n.ComponentDef.Props()
	return uprops.(NavigationSignedProps)
}

func (n NavigationSignedProps) EqualsIntf(val react.Props) bool {
	return n == val.(NavigationSignedProps)
}

var _ react.Props = NavigationSignedProps{}
