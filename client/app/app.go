// Template generated by reactGen

package app

import (
	"myitcv.io/react"
)

//go:generate reactGen

type AppDef struct {
	react.ComponentDef
}

type AppProps struct {
	BrandName string
}

type AppState struct {
	userLoggedIn bool
}

type AppSignHandler interface {
	HandleClickButton(flag bool)
}

type AppSignHandlerFunc func(bool)

func (f AppSignHandlerFunc) HandleClickButton(flag bool) {
	f(flag)
}

func App(p AppProps) *AppElem {
	return buildAppElem(p)
}

func (a AppDef) ComponentWillMount() {
	s := a.State()
	s.userLoggedIn = false
	a.SetState(s)
}

func (a AppDef) setUserLoggedState(flag bool) {
	newAppState := a.State()
	newAppState.userLoggedIn = flag
	a.SetState(newAppState)
}

func AuthSignHandler(a AppDef) AppSignHandler {
	return AppSignHandlerFunc(func(flag bool) {

		a.setUserLoggedState(flag)
	})
}

func (a AppDef) Render() react.Element {
	if a.State().userLoggedIn {
		return UserSignedCentral(UserSignedCentralProps{BrandName: a.Props().BrandName, Title: "Sign Off", Handler: AuthSignHandler(a)})
	} else {
		return UserSignInCentral(UserSignInCentralProps{BrandName: a.Props().BrandName, Title: "Sign In", Handler: AuthSignHandler(a), HttpRef: "/login"})
	}
}
